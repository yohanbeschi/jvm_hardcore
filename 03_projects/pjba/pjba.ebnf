classes = class {class}
class = ws classStartIdentifier ws classModifiers
        className classContent classEndIdentifier ws
classContent = super interfaces fields methods (* modifi√© *)
super = ws superStartIdentifer ws className ws (* nouveau *)
interfaces = {interface} (* nouveau *)
interface = ws interfaceStartIdentifer ws className ws (* nouveau *)
fields = {field}
field = ws fieldStartIdentifier ws fieldModifiers ws fieldName ws fieldDescriptor ws oFieldAssignement
oFieldAssignement = [assignementOperator ws constantValue] ws
methods = {method}
method = ws methodStartIdentifier ws methodModifiers methodName ws 
         methodSignature methodContent methodEndIdentifier ws
className = identifier {identifierSeparator identifier}
fieldName = identifier
fieldDescriptor = descriptor
methodName = identifier
methodSignature = parametersStart parametersDescriptor parametersEnd returnDescriptor
parametersDescriptor = descriptor {descriptor}
returnDescriptor = descriptor | 'V'
methodContent = {ws instruction | label ws}
instruction = mnemonic mws {arg mws}
label = labelAsArg labelEnd
identifier = asciiJavaLetter {asciiJavaLetter | digit}
mnemonic = ? known mnemonic ?
arg = ? authorized argument for mnemonic ?
labelAsArg = {labelCharacter}
classModifiers = {classModifier ws}
fieldModifiers = {fieldModifier ws}
methodModifiers = {methodsModifier ws}
classStartIdentifier = '.class'
classEndIdentifier = '.endclass'
superStartIdentifer = '.super' (* nouveau *)
interfaceStartIdentifer = '.interface' (* nouveau *)
fieldStartIdentifier = '.field'
methodStartIdentifier = '.method'
methodEndIdentifier = '.endMethod'
classModifier = 'public' | 'final' | 'abstract' | 'interface' | 'super' 
fieldModifier = 'public' | 'protected' | 'private' | 'static' | 'final' |
                'transient' | 'volatile'
methodsModifier = 'public' | 'protected' | 'private' | 'static' | 'final' | 
                  'strictfp' | 'synchronized' | 'abstract'  | 'native'
descriptor = 'B' | 'C' | 'D' | 'F' | 'I' | 'J' | 'S' | 'Z' | 
             '[' ['descriptor | 'L' className ';'
constantValue = character | string | boolean | integer | float
assignementOperator = '='
parametersStart = '('
parametersEnd = ')'
labelEnd = ':'
comment = singlelineComment | multilineComment
singlelineComment = ('@' | ';' | '#') ? All characters but LF and EOF ? (LF | EOF)
multilineComment = '/*' ? All characters but '*/' ? '*/'
asciiJavaLetter = asciiLetter | '_' | '$'
labelCharacter = asciiLetter | digit | '_'
asciiLetter = ? a-z | A-Z ?
character = "'" ? One character between all characters excepted NULL ? "'"
string = '"' ? All characters but NULL ? '"'
boolean = 'true' | 'false'
integer = ? integer ?
float = ? float ?
digit = ? 0-9 ?
identifierSeparator = '/'
mws = TAB | SPACE | NEW_LINE
ws = ? {mws | comment | BLANK} ?